"""
Django settings for studentsdb project.

Generated by 'django-admin startproject' using Django 1.11.26.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
from django.conf import global_settings

from .env_settings import SECRET_KEY, DEBUG, TEMPLATE_DEBUG, ALLOWED_HOSTS
from .env_settings import SOCIAL_AUTH_FACEBOOK_SECRET, SOCIAL_AUTH_FACEBOOK_KEY
from .env_settings import SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET, SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
from .env_settings import SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE, SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE
from .env_settings import SOCIAL_AUTH_GOOGLE_PLUS_IGNORE_DEFAULT_SCOPE, SOCIAL_AUTH_GOOGLE_PLUS_SCOPE
from .env_settings import SOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API, SOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API
from .env_settings import DATABASES, STATIC_URL, MEDIA_URL, MEDIA_ROOT
from .env_settings import EMAIL_BACKEND, ADMIN_EMAIL, EMAIL_HOST, EMAIL_PORT, EMAIL_USE_TLS
from .env_settings import EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_SSL
rom .env_settings import PORTAL_URL
import os

# in dev envrironment we may not have STATIC_ROOT defined
try:
    from .env_settings import STATIC_ROOT
except ImportError:
    pass

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', 
    'crispy_forms',
    'contact_form',
    'registration',
    'social.apps.django_app.default',
    'students',
    'stud_auth',
    'django_coverage',
]

AUTHENTICATION_BACKENDS = (
    # for twitter authentication
    'social.backends.google.GoogleOAuth2',
    # for twitter authentication
    'social.backends.twitter.TwitterOAuth',
    # for facebook authentication
    'social.backends.facebook.FacebookOAuth2',
    # default django auth backends
    'django.contrib.auth.backends.ModelBackend',
    )

MIDDLEWARE_CLASSES = [
    'studentsdb.middleware.RequestTimeMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'studentsdb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [(os.path.join(BASE_DIR, 'stud_auth', 'templates')),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',

                # setting of template context processors for social auth
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
                
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'studentsdb.context_processors.groups_processor',
                'studentsdb.context_processors.language_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'studentsdb.wsgi.application'
CRISPY_TEMPLATE_PACK = 'bootstrap3'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#alows registration 
REGISTRATION_OPEN = True
ACCOUNT_ACTIVATION_DAYS = 365

LOGIN_REDIRECT_URL = '/'

LOGIN_URL = 'users:auth_login'

LOGOUT_URL = 'users:auth_logout'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'uk'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

LOG_FILE = os.path.join(BASE_DIR, 'students.log')

COVERAGE_REPORT_HTML_OUTPUT_DIR = os.path.join(BASE_DIR, '..', 'coverage')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s: %(message)s'
        },
        'simple': {
            'format': '%(levelname)s: %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': LOG_FILE,
            'formatter': 'verbose'
        },

    },
    'loggers': {
        'django': {
           'handlers': ['null'],
           'propagate': True,
           'level': 'INFO',
        },
        'students.signals': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
        'students.views.contact_admin': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        }
    }
}


